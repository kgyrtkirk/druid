# testUnnestJsonQueryArraysJsonValue case-crc:d21c3b90
# quidem testcase reason: UNNEST_EXTRA_SCAN
!set debug true
!set defaultTimeout 300000
!set maxScatterGatherBytes 9223372036854775807
!set plannerStrategy DECOUPLED
!set sqlCurrentTimestamp 2000-01-01T00:00:00Z
!set sqlQueryId dummy
!set sqlStringifyArrays false
!set outputformat mysql
!use druidtest:///?componentSupplier=NestedComponentSupplier
SELECT json_value(objects, '$.x' returning bigint) as x, count(*) FROM druid.arrays, UNNEST(JSON_QUERY_ARRAY(arrayObject, '$')) as u(objects) GROUP BY 1;
+------+--------+
| x    | EXPR$1 |
+------+--------+
|    0 |     10 |
|    1 |      4 |
| 1000 |      2 |
|    2 |      8 |
|    3 |      2 |
|    4 |      2 |
+------+--------+
(6 rows)

!ok
LogicalAggregate(group=[{0}], EXPR$1=[COUNT()])
  LogicalProject(x=[JSON_VALUE_BIGINT($13, '$.x')])
    LogicalUnnest(unnestExpr=[$12])
      LogicalProject(__time=[$0], arrayString=[$1], arrayStringNulls=[$2], arrayLong=[$3], arrayLongNulls=[$4], arrayDouble=[$5], arrayDoubleNulls=[$6], arrayVariant=[$7], arrayNoType=[$8], arrayNestedLong=[$9], arrayObject=[$10], cnt=[$11], $f12=[JSON_QUERY_ARRAY($10, '$')])
        LogicalTableScan(table=[[druid, arrays]])

!logicalPlan
DruidAggregate(group=[{0}], EXPR$1=[COUNT()], druid=[logical])
  DruidProject(x=[JSON_VALUE_BIGINT($13, '$.x')], druid=[logical])
    DruidUnnest(unnestExpr=[$12])
      DruidProject(__time=[$0], arrayString=[$1], arrayStringNulls=[$2], arrayLong=[$3], arrayLongNulls=[$4], arrayDouble=[$5], arrayDoubleNulls=[$6], arrayVariant=[$7], arrayNoType=[$8], arrayNestedLong=[$9], arrayObject=[$10], cnt=[$11], $f12=[JSON_QUERY_ARRAY($10, '$')], druid=[logical])
        DruidTableScan(table=[[druid, arrays]], druid=[logical])

!druidPlan
!nativePlan
