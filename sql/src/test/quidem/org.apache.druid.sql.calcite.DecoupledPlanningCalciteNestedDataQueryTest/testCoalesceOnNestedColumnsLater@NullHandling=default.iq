# testCoalesceOnNestedColumnsLater@NullHandling=default case-crc:f5387494
# quidem testcase reason: UNNEST_EXTRA_SCAN
!set debug true
!set defaultTimeout 300000
!set maxScatterGatherBytes 9223372036854775807
!set plannerStrategy DECOUPLED
!set sqlCurrentTimestamp 2000-01-01T00:00:00Z
!set sqlQueryId dummy
!set outputformat mysql
!use druidtest:///?componentSupplier=NestedComponentSupplier
select coalesce(long,c) as col  from druid.all_auto, unnest(json_value(arrayNestedLong, '$[1]' returning bigint array)) as u(c) ;
+-----+
| col |
+-----+
|   1 |
|   1 |
|   2 |
|   4 |
|   4 |
|   5 |
|   5 |
|   5 |
+-----+
(8 rows)

!ok
LogicalProject(col=[CAST($2):BIGINT])
  LogicalUnnest(unnestExpr=[CAST(JSON_VALUE_ARRAY_BIGINT($20, '$[1]')):BIGINT ARRAY])
    LogicalProject(__time=[$0], str=[$1], long=[$2], double=[$3], bool=[$4], variant=[$5], variantNumeric=[$6], variantEmptyObj=[$7], variantEmtpyArray=[$8], variantWithArrays=[$9], obj=[$10], complexObj=[$11], arrayString=[$12], arrayStringNulls=[$13], arrayLong=[$14], arrayLongNulls=[$15], arrayDouble=[$16], arrayDoubleNulls=[$17], arrayVariant=[$18], arrayBool=[$19], arrayNestedLong=[$20], arrayObject=[$21], null=[$22], cstr=[$23], clong=[$24], cdouble=[$25], cObj=[$26], cstringArray=[$27], cLongArray=[$28], cDoubleArray=[$29], cEmptyArray=[$30], cEmptyObj=[$31], cNullArray=[$32], cEmptyObjectArray=[$33], cObjectArray=[$34], cnt=[$35], __time0=[$0])
      LogicalTableScan(table=[[druid, all_auto]])

!logicalPlan
DruidProject(col=[CAST($2):BIGINT], druid=[logical])
  DruidUnnest(unnestExpr=[CAST(JSON_VALUE_ARRAY_BIGINT($20, '$[1]')):BIGINT ARRAY])
    DruidProject(__time=[$0], str=[$1], long=[$2], double=[$3], bool=[$4], variant=[$5], variantNumeric=[$6], variantEmptyObj=[$7], variantEmtpyArray=[$8], variantWithArrays=[$9], obj=[$10], complexObj=[$11], arrayString=[$12], arrayStringNulls=[$13], arrayLong=[$14], arrayLongNulls=[$15], arrayDouble=[$16], arrayDoubleNulls=[$17], arrayVariant=[$18], arrayBool=[$19], arrayNestedLong=[$20], arrayObject=[$21], null=[$22], cstr=[$23], clong=[$24], cdouble=[$25], cObj=[$26], cstringArray=[$27], cLongArray=[$28], cDoubleArray=[$29], cEmptyArray=[$30], cEmptyObj=[$31], cNullArray=[$32], cEmptyObjectArray=[$33], cObjectArray=[$34], cnt=[$35], __time0=[$0], druid=[logical])
      DruidTableScan(table=[[druid, all_auto]], druid=[logical])

!druidPlan
{
  "queryType" : "scan",
  "dataSource" : {
    "type" : "unnest",
    "base" : {
      "type" : "table",
      "name" : "all_auto"
    },
    "virtualColumn" : {
      "type" : "nested-field",
      "columnName" : "arrayNestedLong",
      "outputName" : "j0.unnest",
      "expectedType" : "ARRAY<LONG>",
      "pathParts" : [ {
        "type" : "arrayElement",
        "index" : 1
      } ],
      "processFromRaw" : false
    },
    "unnestFilter" : null
  },
  "intervals" : {
    "type" : "intervals",
    "intervals" : [ "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z" ]
  },
  "resultFormat" : "compactedList",
  "columns" : [ "long" ],
  "columnTypes" : [ "LONG" ],
  "granularity" : {
    "type" : "all"
  },
  "legacy" : false
}
!nativePlan
