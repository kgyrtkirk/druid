# testInnerJoinQueryOfLookupRemovable@filter-rewrites case-crc:a5134bce
# quidem testcase reason: DEFINETLY_WORSE_PLAN
!set sqlQueryId dummy
!set defaultTimeout 300000
!set debug true
!set maxScatterGatherBytes 9223372036854775807
!set enableJoinFilterRewriteValueColumnFilters true
!set enableRewriteJoinToFilter false
!set sqlCurrentTimestamp 2000-01-01T00:00:00Z
!set plannerStrategy DECOUPLED
!set enableJoinFilterRewrite true
!set outputformat mysql
!use druidtest:///
SELECT dim1, dim2, t1.sk
FROM foo
INNER JOIN 
  (SELECT k, SUBSTRING(v, 1, 3) sk FROM lookup.lookyloo) t1
  ON foo.dim2 = t1.k;
+------+------+-----+
| dim1 | dim2 | sk  |
+------+------+-----+
|      | a    | xa  |
| 1    | a    | xa  |
| def  | abc  | xab |
+------+------+-----+
(3 rows)

!ok
LogicalProject(dim1=[$0], dim2=[$1], sk=[$3])
  LogicalProject(dim1=[$1], dim2=[$2], k=[$8], sk=[SUBSTRING($9, 1, 3)])
    LogicalJoin(condition=[=($2, $8)], joinType=[inner])
      LogicalTableScan(table=[[druid, foo]])
      LogicalTableScan(table=[[lookup, lookyloo]])

!logicalPlan
DruidProject(dim1=[$0], dim2=[$1], sk=[$3], druid=[logical])
  DruidProject(dim1=[$1], dim2=[$2], k=[$8], sk=[SUBSTRING($9, 1, 3)], druid=[logical])
    DruidJoin(condition=[=($2, $8)], joinType=[inner])
      DruidTableScan(table=[[druid, foo]], druid=[logical])
      DruidTableScan(table=[[lookup, lookyloo]], druid=[logical])

!druidPlan
{
  "queryType" : "scan",
  "dataSource" : {
    "type" : "join",
    "left" : {
      "type" : "table",
      "name" : "foo"
    },
    "right" : {
      "type" : "lookup",
      "lookup" : "lookyloo"
    },
    "rightPrefix" : "j0.",
    "condition" : "(\"dim2\" == \"j0.k\")",
    "joinType" : "INNER"
  },
  "intervals" : {
    "type" : "intervals",
    "intervals" : [ "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z" ]
  },
  "virtualColumns" : [ {
    "type" : "expression",
    "name" : "v0",
    "expression" : "substring(\"j0.v\", 0, 3)",
    "outputType" : "STRING"
  } ],
  "resultFormat" : "compactedList",
  "columns" : [ "dim1", "dim2", "v0" ],
  "legacy" : false,
  "columnTypes" : [ "STRING", "STRING", "STRING" ],
  "granularity" : {
    "type" : "all"
  }
}
!nativePlan
