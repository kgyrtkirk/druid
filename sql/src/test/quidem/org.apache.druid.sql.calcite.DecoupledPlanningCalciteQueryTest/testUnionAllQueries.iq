# testUnionAllQueries case-crc:072e1ea1
# quidem testcase reason: UNION_ALL_QUERY
!set debug true
!set defaultTimeout 300000
!set maxScatterGatherBytes 9223372036854775807
!set plannerStrategy DECOUPLED
!set sqlCurrentTimestamp 2000-01-01T00:00:00Z
!set sqlQueryId dummy
!set outputformat mysql
!use druidtest:///
SELECT COUNT(*) FROM foo UNION ALL SELECT SUM(cnt) FROM foo UNION ALL SELECT COUNT(*) FROM foo;
+--------+
| EXPR$0 |
+--------+
|      6 |
|      6 |
|      6 |
+--------+
(3 rows)

!ok
LogicalUnion(all=[true])
  LogicalAggregate(group=[{}], EXPR$0=[COUNT()])
    LogicalTableScan(table=[[druid, foo]])
  LogicalAggregate(group=[{}], EXPR$0=[SUM($4)])
    LogicalTableScan(table=[[druid, foo]])
  LogicalAggregate(group=[{}], EXPR$0=[COUNT()])
    LogicalTableScan(table=[[druid, foo]])

!logicalPlan
DruidUnion(all=[true])
  DruidAggregate(group=[{}], EXPR$0=[COUNT()], druid=[logical])
    DruidTableScan(table=[[druid, foo]], druid=[logical])
  DruidAggregate(group=[{}], EXPR$0=[SUM($4)], druid=[logical])
    DruidTableScan(table=[[druid, foo]], druid=[logical])
  DruidAggregate(group=[{}], EXPR$0=[COUNT()], druid=[logical])
    DruidTableScan(table=[[druid, foo]], druid=[logical])

!druidPlan
