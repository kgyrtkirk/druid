!use druidtest://?numMergeBuffers=3&componentSupplier=HllSketchComponentSupplier
!set outputformat mysql


with t0 as (
	SELECT dim1,APPROX_COUNT_DISTINCT_BUILTIN(dim2) a1 FROM druid.foo group by dim1
), t1 as (
	SELECT dim1,APPROX_COUNT_DISTINCT_BUILTIN(dim3) a2 FROM druid.foo group by dim1
), t2 as (
	SELECT dim1,APPROX_COUNT_DISTINCT_BUILTIN(dim2||dim3) a3,APPROX_COUNT_DISTINCT(dim2||dim3) || 'x' a3x FROM druid.foo group by dim1
)
select t0.dim1,a1,ANY_VALUE(a1),ANY_VALUE(a2),ANY_VALUE(a3),ANY_VALUE(a3x),ANY_VALUE(a1||'x'),ANY_VALUE(a2||'x'),
ANY_VALUE(a3||'x') from t0
  join t1 on (t0.dim1=t1.dim1)
  join t2 on (t1.dim1=t2.dim1)
  group by t0.dim1,a1
  ;
+------+----+--------+--------+--------+--------+--------+--------+--------+
| dim1 | a1 | EXPR$2 | EXPR$3 | EXPR$4 | EXPR$5 | EXPR$6 | EXPR$7 | EXPR$8 |
+------+----+--------+--------+--------+--------+--------+--------+--------+
|      |  1 |      1 |      2 |      2 | 2x     | 1x     | 2x     | 2x     |
| 1    |  1 |      1 |      1 |      1 | 1x     | 1x     | 1x     | 1x     |
| 10.1 |  0 |      0 |      2 |      0 | 0x     | 0x     | 2x     | 0x     |
| 2    |  1 |      1 |      1 |      1 | 1x     | 1x     | 1x     | 1x     |
| abc  |  0 |      0 |      0 |      0 | 0x     | 0x     | 0x     | 0x     |
| def  |  1 |      1 |      0 |      0 | 0x     | 1x     | 0x     | 0x     |
+------+----+--------+--------+--------+--------+--------+--------+--------+
(6 rows)

!ok
{
  "queryType" : "groupBy",
  "dataSource" : {
    "type" : "join",
    "left" : {
      "type" : "join",
      "left" : {
        "type" : "query",
        "query" : {
          "queryType" : "groupBy",
          "dataSource" : {
            "type" : "table",
            "name" : "foo"
          },
          "intervals" : {
            "type" : "intervals",
            "intervals" : [ "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z" ]
          },
          "granularity" : {
            "type" : "all"
          },
          "dimensions" : [ {
            "type" : "default",
            "dimension" : "dim1",
            "outputName" : "d0",
            "outputType" : "STRING"
          } ],
          "aggregations" : [ {
            "type" : "cardinality",
            "name" : "a0",
            "fields" : [ {
              "type" : "default",
              "dimension" : "dim2",
              "outputName" : "dim2",
              "outputType" : "STRING"
            } ],
            "byRow" : false,
            "round" : true
          } ],
          "limitSpec" : {
            "type" : "NoopLimitSpec"
          }
        }
      },
      "right" : {
        "type" : "query",
        "query" : {
          "queryType" : "groupBy",
          "dataSource" : {
            "type" : "table",
            "name" : "foo"
          },
          "intervals" : {
            "type" : "intervals",
            "intervals" : [ "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z" ]
          },
          "granularity" : {
            "type" : "all"
          },
          "dimensions" : [ {
            "type" : "default",
            "dimension" : "dim1",
            "outputName" : "d0",
            "outputType" : "STRING"
          } ],
          "aggregations" : [ {
            "type" : "cardinality",
            "name" : "a0",
            "fields" : [ {
              "type" : "default",
              "dimension" : "dim3",
              "outputName" : "dim3",
              "outputType" : "STRING"
            } ],
            "byRow" : false,
            "round" : true
          } ],
          "limitSpec" : {
            "type" : "NoopLimitSpec"
          }
        }
      },
      "rightPrefix" : "j0.",
      "condition" : "(\"d0\" == \"j0.d0\")",
      "joinType" : "INNER"
    },
    "right" : {
      "type" : "query",
      "query" : {
        "queryType" : "groupBy",
        "dataSource" : {
          "type" : "table",
          "name" : "foo"
        },
        "intervals" : {
          "type" : "intervals",
          "intervals" : [ "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z" ]
        },
        "virtualColumns" : [ {
          "type" : "expression",
          "name" : "v0",
          "expression" : "concat(\"dim2\",\"dim3\")",
          "outputType" : "STRING"
        } ],
        "granularity" : {
          "type" : "all"
        },
        "dimensions" : [ {
          "type" : "default",
          "dimension" : "dim1",
          "outputName" : "d0",
          "outputType" : "STRING"
        } ],
        "aggregations" : [ {
          "type" : "cardinality",
          "name" : "a0",
          "fields" : [ {
            "type" : "default",
            "dimension" : "v0",
            "outputName" : "v0",
            "outputType" : "STRING"
          } ],
          "byRow" : false,
          "round" : true
        }, {
          "type" : "cardinality",
          "name" : "a1",
          "fields" : [ {
            "type" : "default",
            "dimension" : "v0",
            "outputName" : "v0",
            "outputType" : "STRING"
          } ],
          "byRow" : false,
          "round" : true
        } ],
        "postAggregations" : [ {
          "type" : "expression",
          "name" : "p0",
          "expression" : "concat(CAST(\"a1\", 'STRING'),'x')",
          "outputType" : "STRING"
        } ],
        "limitSpec" : {
          "type" : "NoopLimitSpec"
        }
      }
    },
    "rightPrefix" : "_j0.",
    "condition" : "(\"j0.d0\" == \"_j0.d0\")",
    "joinType" : "INNER"
  },
  "intervals" : {
    "type" : "intervals",
    "intervals" : [ "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z" ]
  },
  "virtualColumns" : [ {
    "type" : "expression",
    "name" : "v0",
    "expression" : "concat(CAST(\"a0\", 'STRING'),'x')",
    "outputType" : "STRING"
  }, {
    "type" : "expression",
    "name" : "v1",
    "expression" : "concat(CAST(\"j0.a0\", 'STRING'),'x')",
    "outputType" : "STRING"
  }, {
    "type" : "expression",
    "name" : "v2",
    "expression" : "concat(CAST(\"_j0.a0\", 'STRING'),'x')",
    "outputType" : "STRING"
  } ],
  "granularity" : {
    "type" : "all"
  },
  "dimensions" : [ {
    "type" : "default",
    "dimension" : "d0",
    "outputName" : "_d0",
    "outputType" : "STRING"
  }, {
    "type" : "default",
    "dimension" : "a0",
    "outputName" : "_d1",
    "outputType" : "LONG"
  } ],
  "aggregations" : [ {
    "type" : "longAny",
    "name" : "_a0",
    "fieldName" : "a0"
  }, {
    "type" : "longAny",
    "name" : "_a1",
    "fieldName" : "j0.a0"
  }, {
    "type" : "longAny",
    "name" : "_a2",
    "fieldName" : "_j0.a0"
  }, {
    "type" : "stringAny",
    "name" : "_a3",
    "fieldName" : "_j0.p0",
    "maxStringBytes" : 1024,
    "aggregateMultipleValues" : true
  }, {
    "type" : "stringAny",
    "name" : "_a4",
    "fieldName" : "v0",
    "maxStringBytes" : 1024,
    "aggregateMultipleValues" : true
  }, {
    "type" : "stringAny",
    "name" : "_a5",
    "fieldName" : "v1",
    "maxStringBytes" : 1024,
    "aggregateMultipleValues" : true
  }, {
    "type" : "stringAny",
    "name" : "_a6",
    "fieldName" : "v2",
    "maxStringBytes" : 1024,
    "aggregateMultipleValues" : true
  } ],
  "limitSpec" : {
    "type" : "NoopLimitSpec"
  }
}
!nativePlan
